{
  "swagger": "2.0",
  "info": {
    "description": "User Api is used for all user only transactions",
    "version": "1.0",
    "title": "User API",
    "termsOfService": "http://uda.io",
    "contact": {
      "name": "appcenter"
    },
    "license": {
      "name": "Git Hub",
      "url": "https://github.td.teradata.com/appcenter/user-service"
    }
  },
  "host": "appcenter-user-services-stg.ac.uda.io:443",
  "basePath": "/",
  "tags": [
    {
      "name": "Client",
      "description": "Client Controller"
    },
    {
      "name": "Configuration",
      "description": "Authentication Controller"
    },
    {
      "name": "User",
      "description": "User Controller"
    },
    {
      "name": "token-controller",
      "description": "Token Controller"
    }
  ],
  "paths": {
    "/v1/client": {
      "post": {
        "tags": [
          "Client"
        ],
        "summary": "Create a client credential",
        "description": "Create a client credential",
        "operationId": "createClientCredentialUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "Successfully created client credential",
            "schema": {
              "$ref": "#/definitions/ClientCred"
            }
          },
          "401": {
            "description": "Unauthorized to query or could not be found"
          },
          "500": {
            "description": "Data store not configured or unreachable"
          }
        }
      }
    },
    "/v1/client/{client_id}": {
      "delete": {
        "tags": [
          "Client"
        ],
        "summary": "Delete a client credential",
        "description": "Delete an existing client credential",
        "operationId": "deleteClientCredentailUsingDELETE",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "client_id",
            "in": "path",
            "description": "client_id",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authentication Token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully deleted client credential"
          },
          "401": {
            "description": "Unauthorized to query or could not be found"
          },
          "404": {
            "description": "Object not found"
          },
          "500": {
            "description": "Data store not configured or unreachable"
          }
        }
      }
    },
    "/v1/ldap/config": {
      "get": {
        "tags": [
          "Configuration"
        ],
        "summary": "Get all Configurations",
        "description": "Lists all Configurations",
        "operationId": "getAllConfigsUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authentication Token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully returned list of  Configurations",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/LDAPConfig"
              }
            }
          },
          "500": {
            "description": "Data store not configured or unreachable"
          }
        }
      },
      "post": {
        "tags": [
          "Configuration"
        ],
        "summary": "Add a LDAP Configuration",
        "description": "Create LDAP Configuration",
        "operationId": "createConfigUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "ldapConfig",
            "description": "ldapConfig",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LDAPConfig"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authentication Token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/LDAPConfig"
            }
          },
          "201": {
            "description": "Successfully Saved a Configuration",
            "schema": {
              "$ref": "#/definitions/LDAPConfig"
            }
          },
          "400": {
            "description": "Bad request"
          },
          "500": {
            "description": "Data store not configured or unreachable"
          }
        }
      }
    },
    "/v1/ldap/config/verify": {
      "post": {
        "tags": [
          "Configuration"
        ],
        "summary": "Test a LDAP Configuration",
        "description": "Test a LDAP Configuration",
        "operationId": "verifyConfigUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "ldapConfig",
            "description": "ldapConfig",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LDAPConfig"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authentication Token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully Tested",
            "schema": {
              "type": "boolean"
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized to query or could not be found"
          },
          "404": {
            "description": "Object not found"
          },
          "500": {
            "description": "Data store not configured or unreachable"
          }
        }
      }
    },
    "/v1/ldap/config/{config_id}": {
      "get": {
        "tags": [
          "Configuration"
        ],
        "summary": "Get configuration by Id",
        "description": "Get Configuration by Id",
        "operationId": "getConfigByIdUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "config_id",
            "in": "path",
            "description": "config_id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authentication Token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully returned Configuration by Id",
            "schema": {
              "$ref": "#/definitions/LDAPConfig"
            }
          },
          "404": {
            "description": "Object not found"
          },
          "500": {
            "description": "Data store not configured or unreachable"
          }
        }
      },
      "delete": {
        "tags": [
          "Configuration"
        ],
        "summary": "Delete a Configuration based on Id",
        "description": "Delete a Configuration Based on ID",
        "operationId": "deleteConfigUsingDELETE",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "config_id",
            "in": "path",
            "description": "config_id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authentication Token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "Successfully deleted a Configuration entry"
          },
          "404": {
            "description": "Object not found"
          },
          "500": {
            "description": "Data store not configured or unreachable"
          }
        }
      },
      "patch": {
        "tags": [
          "Configuration"
        ],
        "summary": "Update a Configuration",
        "description": "Update a Configuration",
        "operationId": "updateConfigUsingPATCH",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "config_id",
            "in": "path",
            "description": "config_id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "config",
            "description": "config",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LDAPConfig"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authentication Token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully Updated a Configuration",
            "schema": {
              "$ref": "#/definitions/LDAPConfig"
            }
          },
          "400": {
            "description": "Bad request"
          },
          "404": {
            "description": "Object not found"
          },
          "500": {
            "description": "Data store not configured or unreachable"
          }
        }
      }
    },
    "/v1/token": {
      "post": {
        "tags": [
          "token-controller"
        ],
        "summary": "Authenticate a User",
        "description": "Authenticate a User",
        "operationId": "authenticateUserUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "loginCred",
            "description": "loginCred",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LoginCred"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully logged in the user",
            "schema": {
              "$ref": "#/definitions/TokenResponse"
            }
          },
          "401": {
            "description": "Unauthorized to query or could not be found"
          },
          "500": {
            "description": "Data store not configured or unreachable"
          }
        }
      }
    },
    "/v1/users": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get all Users",
        "description": "Lists all Users",
        "operationId": "getAllUsersUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "description": "username",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "q",
            "in": "query",
            "description": "q",
            "required": false,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authentication Token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully returned users",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/User"
              }
            }
          },
          "401": {
            "description": "Unauthorized to query or could not be found"
          },
          "500": {
            "description": "Data store not configured or unreachable"
          }
        }
      },
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Add a User",
        "description": "Add a new User",
        "operationId": "createUserUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "user",
            "description": "user",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authentication Token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Successfully created user",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "401": {
            "description": "Unauthorized to query or could not be found"
          },
          "500": {
            "description": "Data store not configured or unreachable"
          }
        }
      }
    },
    "/v1/users/{username}": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get a User by id",
        "description": "Get a particular User",
        "operationId": "getUserByNameUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "description": "username",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authentication Token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully returned a User",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "401": {
            "description": "Unauthorized to query or could not be found"
          },
          "404": {
            "description": "Object not found"
          },
          "500": {
            "description": "Data store not configured or unreachable"
          }
        }
      },
      "delete": {
        "tags": [
          "User"
        ],
        "summary": "Delete a User",
        "description": "Delete an existing User",
        "operationId": "deleteUserUsingDELETE",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "description": "username",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authentication Token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully removed user"
          },
          "401": {
            "description": "Unauthorized to query or could not be found"
          },
          "404": {
            "description": "Object not found"
          },
          "500": {
            "description": "Data store not configured or unreachable"
          }
        }
      },
      "patch": {
        "tags": [
          "User"
        ],
        "summary": "Updates a user",
        "description": "Update an existing User",
        "operationId": "updateUserUsingPATCH",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "description": "username",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "user",
            "description": "user",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authentication Token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully updated a User",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "401": {
            "description": "Unauthorized to query or could not be found"
          },
          "404": {
            "description": "Object not found"
          },
          "500": {
            "description": "Data store not configured or unreachable"
          }
        }
      }
    }
  },
  "definitions": {
    "User": {
      "type": "object",
      "properties": {
        "admin": {
          "type": "boolean"
        },
        "display_name": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "groups": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "local": {
          "type": "boolean"
        },
        "password": {
          "type": "string"
        },
        "username": {
          "type": "string"
        }
      }
    },
    "TokenResponse": {
      "type": "object",
      "properties": {
        "access_token": {
          "type": "string"
        },
        "admin": {
          "type": "boolean"
        },
        "display_name": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "expires_at": {
          "type": "string"
        },
        "expires_in": {
          "type": "integer",
          "format": "int32"
        },
        "groups": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "local": {
          "type": "boolean"
        },
        "password": {
          "type": "string"
        },
        "refresh_token": {
          "type": "string"
        },
        "token_in": {
          "type": "string"
        },
        "token_type": {
          "type": "string"
        },
        "username": {
          "type": "string"
        }
      }
    },
    "LDAPConfig": {
      "type": "object",
      "properties": {
        "allowed_groups": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "base_dn": {
          "type": "string"
        },
        "config_id": {
          "type": "integer",
          "format": "int64"
        },
        "connection_url": {
          "type": "string"
        },
        "email_field": {
          "type": "string"
        },
        "encryption": {
          "type": "string",
          "enum": [
            "NONE",
            "START_TLS",
            "LDAPS"
          ]
        },
        "group_id_field": {
          "type": "string"
        },
        "groups_base_dn": {
          "type": "string"
        },
        "id_field": {
          "type": "string"
        },
        "member_field": {
          "type": "string"
        },
        "member_of_field": {
          "type": "string"
        },
        "name_field": {
          "type": "string"
        },
        "port": {
          "type": "integer",
          "format": "int32"
        },
        "search_pass": {
          "type": "string"
        },
        "search_user": {
          "type": "string"
        },
        "server": {
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      }
    },
    "LoginCred": {
      "type": "object",
      "properties": {
        "grant_type": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "refresh_token": {
          "type": "string"
        },
        "username": {
          "type": "string"
        }
      }
    },
    "ClientCred": {
      "type": "object",
      "properties": {
        "client_id": {
          "type": "string"
        },
        "client_secret": {
          "type": "string"
        },
        "created": {
          "$ref": "#/definitions/Timestamp"
        },
        "createdby": {
          "type": "string"
        }
      }
    },
    "Timestamp": {
      "type": "object",
      "properties": {
        "date": {
          "type": "integer",
          "format": "int32"
        },
        "day": {
          "type": "integer",
          "format": "int32"
        },
        "hours": {
          "type": "integer",
          "format": "int32"
        },
        "minutes": {
          "type": "integer",
          "format": "int32"
        },
        "month": {
          "type": "integer",
          "format": "int32"
        },
        "nanos": {
          "type": "integer",
          "format": "int32"
        },
        "seconds": {
          "type": "integer",
          "format": "int32"
        },
        "time": {
          "type": "integer",
          "format": "int64"
        },
        "timezone_offset": {
          "type": "integer",
          "format": "int32"
        },
        "year": {
          "type": "integer",
          "format": "int32"
        }
      }
    }
  }
}
